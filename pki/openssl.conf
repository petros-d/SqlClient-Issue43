[ ca ]
# The "ca" section defines the way the CA acts when using the ca command to sign certificates.
# Nothing special here.
default_ca = CA_default

[ CA_default ]
# CA structure paths for CA_default profile
dir               = .                         # CA main dir
certs             = $dir/certs                # Signed certificate store
crl_dir           = $dir/crl                  # CRL store
new_certs_dir     = $dir/newcerts             # All new generated certs would place here
database          = $dir/index.txt            # This is the database of signed certificates. It is internally used by OpenSSL.
serial            = $dir/serial               # The serial number which the CA is currently at.
RANDFILE          = $dir/private/.rand        # This is a random file to read/write random data to/from.

# The root key and root certificate.
private_key       = $dir/private/ca-key.pem
certificate       = $dir/certs/ca.pem

# For certificate revocation lists.
crlnumber         = $dir/crlnumber            # Serial number for CRL
crl               = $dir/crl/ca-crl.pem       # Current CRL
crl_extensions    = crl_ext                   # CRL extension profile
default_crl_days  = 30                        # CRL life period

default_md        = sha256                    # The default digest algorithm

name_opt          = ca_default                # Define the way that the name is displayed before sign.
cert_opt          = ca_default                # Define the way that the certificate info is displayed before sign.
default_days      = 365                       # Default life period for certificate
preserve          = no                        # no - OpenSSL would re-order the attributes in the DNs of CSRs to make them consistent.
policy            = policy_strict             # DN policy

[ policy_strict ]
# Below there is a Distinguished Name (DN) policy
# Fields listed as "match" must contain the exact same contents as in the CA's DN.
# Fields listed as "supplied" must be present.
# Fields listed as "optional" are allowed, but not required to be there.
# Remember: Anything allowed must be provided below.
# Multiple policy are allowed and choose via `-policy` argument.

countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the `req` tool (`man req`).
default_bits        = 2048                      # default key size
distinguished_name  = req_distinguished_name    # Point to DN requirements and defaults
string_mask         = utf8only                  # Accepted type of string
default_md          = sha256                    # Digest algorithm
x509_extensions     = v3_ca                     # Extension to add

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_default             = GB
stateOrProvinceName             = State or Province Name
stateOrProvinceName_default     = London
0.organizationName              = Organization Name
0.organizationName_default      = Example PKI
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
commonName_max                  = 64
emailAddress                    = Email Address

[ req_attributes ]
[ v3_ca ]
# Extensions for a typical CA
subjectKeyIdentifier = hash                                   # SKI is equal hash from the public key
authorityKeyIdentifier = keyid:always,issuer                  # AKI equals the SKI of the CA and the issuer of the CA.
basicConstraints = critical, CA:true                          # For subCA also use `pathlen:0`
# The supported names are: digitalSignature, nonRepudiation, keyEncipherment,
# dataEncipherment, keyAgreement, keyCertSign, cRLSign, encipherOnly and decipherOnly.
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ srv_cert ]
# Extensions for server certificates
basicConstraints = CA:FALSE
nsCertType = server
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
crlDistributionPoints = URI:ldap://doesnotexist.example.local/ldap?DN=TEST

#http://doesnotexist.example.local/crl.pem

[ crl_ext ]
# Extension for CRLs
authorityKeyIdentifier=keyid:always